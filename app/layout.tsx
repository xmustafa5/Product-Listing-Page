import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { SidebarInset, SidebarProvider } from "@/components/ui/sidebar";
import { AppSidebar } from "@/components/app-sidebar";
import { ThemeProvider } from "@/components/theme-provider";
import HeaderPage from "./_components/shared/HeaderPage";
import QueryClientProviderLayout from "./provider/QueryClientProvider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased
           `}
      >
        <div className="mx-auto w-full bg-background border-border/40 dark:border-border min-[1800px]:max-w-[1536px] min-[1800px]:border-x flex justify-center items-center overflow-hidden relative ">
          <QueryClientProviderLayout>
            <SidebarProvider>
              <AppSidebar />
              {/* <main className="
          md:pl-6 lg:pl-10
          pr-4
          
          h-screen overflow-y-auto scrollbar-hidden h-full relative flex min-h-svh flex-1 flex-col peer-data-[variant=floating]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=floating]:mb-4 md:peer-data-[state=collapsed]:peer-data-[variant=floating]:ml-2 md:peer-data-[variant=floating]:ml-0  md:peer-data-[variant=floating]:rounded-xl 
           md:peer-data-[variant=floating]:shadow 
          border
          
           group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border
          ">
            {/* <SidebarTrigger /> */}

              {/* {children}
          
          </main> */}
              <SidebarInset>
                <ThemeProvider
                  attribute="class"
                  defaultTheme="light"
                  enableSystem
                  disableTransitionOnChange
                >
                  <div className="relative">
                    <HeaderPage />
                    {/* <ModeToggle /> */}

                    {children}
                  </div>
                </ThemeProvider>
              </SidebarInset>
            </SidebarProvider>
          </QueryClientProviderLayout>
        </div>
      </body>
    </html>
  );
}
